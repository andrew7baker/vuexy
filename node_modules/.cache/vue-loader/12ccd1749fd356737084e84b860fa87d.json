{"remainingRequest":"/Users/qk/mygithub/vuexystarer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qk/mygithub/vuexystarer/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qk/mygithub/vuexystarer/src/App.vue","mtime":1578058484000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport themeConfig from '@/../themeConfig.js'\n\nexport default {\n  data() {\n    return {\n      vueAppClasses: [],\n    }\n  },\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val)\n    },\n    '$vs.rtl'(val) {\n      document.documentElement.setAttribute(\"dir\", val ? \"rtl\" : \"ltr\")\n    }\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n        document.body.classList.add('theme-dark')\n      }\n      else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n        document.body.classList.add('theme-semi-dark')\n      }\n      else {\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n      }\n    },\n    setAppClasses(classesStr) {\n      this.vueAppClasses.push(classesStr)\n    },\n    handleWindowResize() {\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n      // Set --vh property\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`);\n    },\n    handleScroll() {\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n    }\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  },\n  async created() {\n\n    let dir = this.$vs.rtl ? \"rtl\" : \"ltr\"\n    document.documentElement.setAttribute(\"dir\", dir)\n\n    window.addEventListener('resize', this.handleWindowResize)\n    window.addEventListener('scroll', this.handleScroll)\n\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.handleWindowResize)\n    window.removeEventListener('scroll', this.handleScroll)\n  },\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\n\tFile Name: App.vue\n\tDescription: Main vue file - APP\n\t----------------------------------------------------------------------------------------\n\tItem Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n\t<div id=\"app\" :class=\"vueAppClasses\">\n\t\t<router-view @setAppClasses=\"setAppClasses\" />\n\t</div>\n</template>\n\n<script>\nimport themeConfig from '@/../themeConfig.js'\n\nexport default {\n  data() {\n    return {\n      vueAppClasses: [],\n    }\n  },\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val)\n    },\n    '$vs.rtl'(val) {\n      document.documentElement.setAttribute(\"dir\", val ? \"rtl\" : \"ltr\")\n    }\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n        document.body.classList.add('theme-dark')\n      }\n      else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n        document.body.classList.add('theme-semi-dark')\n      }\n      else {\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n      }\n    },\n    setAppClasses(classesStr) {\n      this.vueAppClasses.push(classesStr)\n    },\n    handleWindowResize() {\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n      // Set --vh property\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`);\n    },\n    handleScroll() {\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n    }\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n    let vh = window.innerHeight * 0.01;\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  },\n  async created() {\n\n    let dir = this.$vs.rtl ? \"rtl\" : \"ltr\"\n    document.documentElement.setAttribute(\"dir\", dir)\n\n    window.addEventListener('resize', this.handleWindowResize)\n    window.addEventListener('scroll', this.handleScroll)\n\n  },\n  destroyed() {\n    window.removeEventListener('resize', this.handleWindowResize)\n    window.removeEventListener('scroll', this.handleScroll)\n  },\n}\n\n</script>\n"]}]}