{"remainingRequest":"/Users/qk/mygithub/vuexystarer/node_modules/babel-loader/lib/index.js!/Users/qk/mygithub/vuexystarer/src/store/state.js","dependencies":[{"path":"/Users/qk/mygithub/vuexystarer/src/store/state.js","mtime":1578058366000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qk/mygithub/vuexystarer/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\n\n/*=========================================================================================\n  File Name: state.js\n  Description: Vuex Store - state\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport navbarSearchAndPinList from \"@/layouts/components/navbar/navbarSearchAndPinList\";\nimport themeConfig from \"@/../themeConfig.js\";\nimport colors from \"@/../themeConfig.js\"; // /////////////////////////////////////////////\n// Helper\n// /////////////////////////////////////////////\n// *From Auth - Data will be received from auth provider\n\nvar userDefaults = {\n  uid: 0,\n  // From Auth\n  displayName: \"John Doe\",\n  // From Auth\n  about: \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n  photoURL: require(\"@/assets/images/portrait/small/avatar-s-11.jpg\"),\n  // From Auth\n  status: \"online\",\n  userRole: \"admin\"\n}; // Check if device is touch device\n// This is used to remove perfect scrollbar from touch devices\n// Using Dynamic components\n\nvar is_touch_device = function is_touch_device() {\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n  var mq = function mq(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if ('ontouchstart' in window || window.DocumentTouch) {\n    return true;\n  } // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n\n\n  var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n  return mq(query);\n}; // /////////////////////////////////////////////\n// State\n// /////////////////////////////////////////////\n\n\nvar state = {\n  AppActiveUser: userDefaults,\n  bodyOverlay: false,\n  isVerticalNavMenuActive: true,\n  is_touch_device: is_touch_device(),\n  mainLayoutType: themeConfig.mainLayoutType || \"vertical\",\n  navbarSearchAndPinList: navbarSearchAndPinList,\n  reduceButton: themeConfig.sidebarCollapsed,\n  verticalNavMenuWidth: \"default\",\n  verticalNavMenuItemsMin: false,\n  scrollY: 0,\n  starredPages: navbarSearchAndPinList[\"pages\"].data.filter(function (page) {\n    return page.is_bookmarked;\n  }),\n  theme: themeConfig.theme || \"light\",\n  themePrimaryColor: colors.primary,\n  // Can be used to get current window with\n  // Note: Above breakpoint state is for internal use of sidebar & navbar component\n  windowWidth: null\n};\nexport default state;",{"version":3,"sources":["/Users/qk/mygithub/vuexystarer/src/store/state.js"],"names":["navbarSearchAndPinList","themeConfig","colors","userDefaults","uid","displayName","about","photoURL","require","status","userRole","is_touch_device","prefixes","split","mq","query","window","matchMedia","matches","DocumentTouch","join","state","AppActiveUser","bodyOverlay","isVerticalNavMenuActive","mainLayoutType","reduceButton","sidebarCollapsed","verticalNavMenuWidth","verticalNavMenuItemsMin","scrollY","starredPages","data","filter","page","is_bookmarked","theme","themePrimaryColor","primary","windowWidth"],"mappings":";;;AAAA;;;;;;;;AASA,OAAOA,sBAAP,MAAmC,oDAAnC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;AAEA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAW,CADK;AACO;AAC1BC,EAAAA,WAAW,EAAG,UAFK;AAEO;AAC1BC,EAAAA,KAAK,EAAS,8GAHK;AAInBC,EAAAA,QAAQ,EAAMC,OAAO,CAAC,gDAAD,CAJF;AAIsD;AACzEC,EAAAA,MAAM,EAAQ,QALK;AAMnBC,EAAAA,QAAQ,EAAM;AANK,CAArB,C,CAUA;AACA;AACA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAIC,QAAQ,GAAG,4BAA4BC,KAA5B,CAAkC,GAAlC,CAAf;;AACA,MAAIC,EAAE,GAAG,SAALA,EAAK,CAASC,KAAT,EAAgB;AACrB,WAAOC,MAAM,CAACC,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACH,GAFD;;AAIA,MAAK,kBAAkBF,MAAnB,IAA8BA,MAAM,CAACG,aAAzC,EAAwD;AACpD,WAAO,IAAP;AACH,GAR2B,CAU5B;AACA;;;AACA,MAAIJ,KAAK,GAAG,CAAC,GAAD,EAAMH,QAAQ,CAACQ,IAAT,CAAc,kBAAd,CAAN,EAAyC,QAAzC,EAAmD,GAAnD,EAAwDA,IAAxD,CAA6D,EAA7D,CAAZ;AACA,SAAON,EAAE,CAACC,KAAD,CAAT;AACD,CAdD,C,CAiBA;AACA;AACA;;;AAEA,IAAMM,KAAK,GAAG;AACVC,EAAAA,aAAa,EAAanB,YADhB;AAEVoB,EAAAA,WAAW,EAAe,KAFhB;AAGVC,EAAAA,uBAAuB,EAAG,IAHhB;AAIVb,EAAAA,eAAe,EAAWA,eAAe,EAJ/B;AAKVc,EAAAA,cAAc,EAAYxB,WAAW,CAACwB,cAAZ,IAA8B,UAL9C;AAMVzB,EAAAA,sBAAsB,EAAIA,sBANhB;AAOV0B,EAAAA,YAAY,EAAczB,WAAW,CAAC0B,gBAP5B;AAQVC,EAAAA,oBAAoB,EAAM,SARhB;AASVC,EAAAA,uBAAuB,EAAG,KAThB;AAUVC,EAAAA,OAAO,EAAmB,CAVhB;AAWVC,EAAAA,YAAY,EAAc/B,sBAAsB,CAAC,OAAD,CAAtB,CAAgCgC,IAAhC,CAAqCC,MAArC,CAA4C,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,aAAf;AAAA,GAA5C,CAXhB;AAYVC,EAAAA,KAAK,EAAqBnC,WAAW,CAACmC,KAAZ,IAAqB,OAZrC;AAaVC,EAAAA,iBAAiB,EAASnC,MAAM,CAACoC,OAbvB;AAeV;AACA;AACAC,EAAAA,WAAW,EAAE;AAjBH,CAAd;AAoBA,eAAelB,KAAf","sourcesContent":["/*=========================================================================================\n  File Name: state.js\n  Description: Vuex Store - state\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport navbarSearchAndPinList from \"@/layouts/components/navbar/navbarSearchAndPinList\"\nimport themeConfig from \"@/../themeConfig.js\"\nimport colors from \"@/../themeConfig.js\"\n\n// /////////////////////////////////////////////\n// Helper\n// /////////////////////////////////////////////\n\n// *From Auth - Data will be received from auth provider\nconst userDefaults = {\n  uid         : 0,          // From Auth\n  displayName : \"John Doe\", // From Auth\n  about       : \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n  photoURL    : require(\"@/assets/images/portrait/small/avatar-s-11.jpg\"), // From Auth\n  status      : \"online\",\n  userRole    : \"admin\"\n}\n\n\n// Check if device is touch device\n// This is used to remove perfect scrollbar from touch devices\n// Using Dynamic components\nconst is_touch_device = () => {\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n  var mq = function(query) {\n      return window.matchMedia(query).matches;\n  }\n\n  if (('ontouchstart' in window) || window.DocumentTouch) {\n      return true;\n  }\n\n  // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n  var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n  return mq(query);\n}\n\n\n// /////////////////////////////////////////////\n// State\n// /////////////////////////////////////////////\n\nconst state = {\n    AppActiveUser           : userDefaults,\n    bodyOverlay             : false,\n    isVerticalNavMenuActive : true,\n    is_touch_device         : is_touch_device(),\n    mainLayoutType          : themeConfig.mainLayoutType || \"vertical\",\n    navbarSearchAndPinList  : navbarSearchAndPinList,\n    reduceButton            : themeConfig.sidebarCollapsed,\n    verticalNavMenuWidth    : \"default\",\n    verticalNavMenuItemsMin : false,\n    scrollY                 : 0,\n    starredPages            : navbarSearchAndPinList[\"pages\"].data.filter((page) => page.is_bookmarked),\n    theme                   : themeConfig.theme || \"light\",\n    themePrimaryColor       : colors.primary,\n\n    // Can be used to get current window with\n    // Note: Above breakpoint state is for internal use of sidebar & navbar component\n    windowWidth: null,\n}\n\nexport default state\n"]}]}